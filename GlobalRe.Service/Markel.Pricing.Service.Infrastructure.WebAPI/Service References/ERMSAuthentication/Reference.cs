//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Markel.Pricing.Service.Infrastructure.ERMSAuthentication {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ERMSAuthentication.IAuthenticationService")]
    public interface IAuthenticationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Authenticate", ReplyAction="http://tempuri.org/IAuthenticationService/AuthenticateResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CoreVelocity.Core.Security.ApplicationConnector>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.ApplicationConnector))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.PermissionSet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CoreVelocity.Core.Security.ConfigurableValue>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.ConfigurableValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CoreVelocity.Core.Security.Permission>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.Permission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Security.Model.AuthenticationResponse))]
        CoreVelocity.Core.Security.EnterpriseIdentity Authenticate(CoreVelocity.Core.Security.EnterpriseIdentity identityToAuthenticate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Authenticate", ReplyAction="http://tempuri.org/IAuthenticationService/AuthenticateResponse")]
        System.Threading.Tasks.Task<CoreVelocity.Core.Security.EnterpriseIdentity> AuthenticateAsync(CoreVelocity.Core.Security.EnterpriseIdentity identityToAuthenticate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/AuthenticateWithParams", ReplyAction="http://tempuri.org/IAuthenticationService/AuthenticateWithParamsResponse")]
        CoreVelocity.Security.Model.AuthenticationResponse AuthenticateWithParams(string userName, string domainName, string environmentName, string applicationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/AuthenticateWithParams", ReplyAction="http://tempuri.org/IAuthenticationService/AuthenticateWithParamsResponse")]
        System.Threading.Tasks.Task<CoreVelocity.Security.Model.AuthenticationResponse> AuthenticateWithParamsAsync(string userName, string domainName, string environmentName, string applicationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ValidateAuthenticationToken", ReplyAction="http://tempuri.org/IAuthenticationService/ValidateAuthenticationTokenResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CoreVelocity.Core.Security.ApplicationConnector>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.ApplicationConnector))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.PermissionSet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CoreVelocity.Core.Security.ConfigurableValue>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.ConfigurableValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CoreVelocity.Core.Security.Permission>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.Permission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Security.Model.AuthenticationResponse))]
        bool ValidateAuthenticationToken(CoreVelocity.Core.Security.EnterpriseIdentity identityToValidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ValidateAuthenticationToken", ReplyAction="http://tempuri.org/IAuthenticationService/ValidateAuthenticationTokenResponse")]
        System.Threading.Tasks.Task<bool> ValidateAuthenticationTokenAsync(CoreVelocity.Core.Security.EnterpriseIdentity identityToValidate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ValidateAuthenticationTokenWithParams", ReplyAction="http://tempuri.org/IAuthenticationService/ValidateAuthenticationTokenWithParamsRe" +
            "sponse")]
        bool ValidateAuthenticationTokenWithParams(string token, string environmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/ValidateAuthenticationTokenWithParams", ReplyAction="http://tempuri.org/IAuthenticationService/ValidateAuthenticationTokenWithParamsRe" +
            "sponse")]
        System.Threading.Tasks.Task<bool> ValidateAuthenticationTokenWithParamsAsync(string token, string environmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetIdentityFromToken", ReplyAction="http://tempuri.org/IAuthenticationService/GetIdentityFromTokenResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CoreVelocity.Core.Security.ApplicationConnector>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.ApplicationConnector))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.PermissionSet))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CoreVelocity.Core.Security.ConfigurableValue>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.ConfigurableValue))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CoreVelocity.Core.Security.Permission>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Core.Security.Permission))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CoreVelocity.Security.Model.AuthenticationResponse))]
        CoreVelocity.Core.Security.EnterpriseIdentity GetIdentityFromToken(string token, string environmentName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/GetIdentityFromToken", ReplyAction="http://tempuri.org/IAuthenticationService/GetIdentityFromTokenResponse")]
        System.Threading.Tasks.Task<CoreVelocity.Core.Security.EnterpriseIdentity> GetIdentityFromTokenAsync(string token, string environmentName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationServiceChannel : Markel.Pricing.Service.Infrastructure.ERMSAuthentication.IAuthenticationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationServiceClient : System.ServiceModel.ClientBase<Markel.Pricing.Service.Infrastructure.ERMSAuthentication.IAuthenticationService>, Markel.Pricing.Service.Infrastructure.ERMSAuthentication.IAuthenticationService {
        
        public AuthenticationServiceClient() {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CoreVelocity.Core.Security.EnterpriseIdentity Authenticate(CoreVelocity.Core.Security.EnterpriseIdentity identityToAuthenticate) {
            return base.Channel.Authenticate(identityToAuthenticate);
        }
        
        public System.Threading.Tasks.Task<CoreVelocity.Core.Security.EnterpriseIdentity> AuthenticateAsync(CoreVelocity.Core.Security.EnterpriseIdentity identityToAuthenticate) {
            return base.Channel.AuthenticateAsync(identityToAuthenticate);
        }
        
        public CoreVelocity.Security.Model.AuthenticationResponse AuthenticateWithParams(string userName, string domainName, string environmentName, string applicationName) {
            return base.Channel.AuthenticateWithParams(userName, domainName, environmentName, applicationName);
        }
        
        public System.Threading.Tasks.Task<CoreVelocity.Security.Model.AuthenticationResponse> AuthenticateWithParamsAsync(string userName, string domainName, string environmentName, string applicationName) {
            return base.Channel.AuthenticateWithParamsAsync(userName, domainName, environmentName, applicationName);
        }
        
        public bool ValidateAuthenticationToken(CoreVelocity.Core.Security.EnterpriseIdentity identityToValidate) {
            return base.Channel.ValidateAuthenticationToken(identityToValidate);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateAuthenticationTokenAsync(CoreVelocity.Core.Security.EnterpriseIdentity identityToValidate) {
            return base.Channel.ValidateAuthenticationTokenAsync(identityToValidate);
        }
        
        public bool ValidateAuthenticationTokenWithParams(string token, string environmentName) {
            return base.Channel.ValidateAuthenticationTokenWithParams(token, environmentName);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateAuthenticationTokenWithParamsAsync(string token, string environmentName) {
            return base.Channel.ValidateAuthenticationTokenWithParamsAsync(token, environmentName);
        }
        
        public CoreVelocity.Core.Security.EnterpriseIdentity GetIdentityFromToken(string token, string environmentName) {
            return base.Channel.GetIdentityFromToken(token, environmentName);
        }
        
        public System.Threading.Tasks.Task<CoreVelocity.Core.Security.EnterpriseIdentity> GetIdentityFromTokenAsync(string token, string environmentName) {
            return base.Channel.GetIdentityFromTokenAsync(token, environmentName);
        }
    }
}
